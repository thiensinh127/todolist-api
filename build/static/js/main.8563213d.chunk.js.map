{"version":3,"sources":["ToDoList/X2oObC4.png","redux/constants/ToDoListConstants.js","redux/action/ToDoListAction.js","ToDoList/DateTime.js","assets/img/Spinner-1s-200px (1).gif","ToDoList/Loading.js","ToDoList/ToDoListRedux.js","App.js","reportWebVitals.js","redux/reducer/ToDoListReducer.js","redux/configStore.js","index.js"],"names":["GET_TASK_API","getTaskListApi","dispatch","showLoading","axios","url","method","then","res","type","taskList","data","hideLoading","catch","err","console","log","response","DateTime","state","curTime","setInterval","setState","Date","toLocaleString","className","this","Component","Loading","useSelector","ToDoListReducer","loading","src","anhloading","alt","ToDoListRedux","props","useDispatch","useState","errors","taskName","values","isValid","setstate","useEffect","reCheckTask","recheckTaskApi","checkTask","checkTaskApi","delTask","delTaskApi","addTask","e","preventDefault","alert","onSubmit","hinh","name","onChange","target","value","newValues","newErrors","test","trim","id","placeholder","onClick","style","display","filter","item","status","map","task","index","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8563213d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/X2oObC4.dfa77826.png\";","export const GET_TASK_API='GET_TASK_API';","import axios from \"axios\"\r\nimport { GET_TASK_API } from \"../constants/ToDoListConstants\"\r\n\r\nexport const getTaskListApi = () => {\r\n    \r\n    return  dispatch=>{\r\n        dispatch(showLoading())\r\n        return axios({\r\n            url:\"http://svcy.myclass.vn/api/ToDoList/GetAllTask\",\r\n            method:\"GET\",\r\n        })\r\n        .then((res)=>{\r\n            dispatch({\r\n                type:GET_TASK_API,\r\n                taskList:res.data,\r\n            });\r\n            dispatch(hideLoading());\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err.response?.data)\r\n            dispatch(hideLoading())\r\n        });\r\n    }\r\n}\r\n\r\nexport const addTaskApi =(taskName)=>{\r\n    return dispatch=>{\r\n        dispatch(showLoading())\r\n        return axios({\r\n            url:\"http://svcy.myclass.vn/api/ToDoList/AddTask\",\r\n            method:\"POST\",\r\n            data:{taskName:taskName},\r\n        })\r\n        .then((res)=>{\r\n          dispatch(getTaskListApi());\r\n          dispatch(hideLoading());\r\n        })\r\n        .catch((err)=>{\r\n            alert(err.response?.data) \r\n            dispatch(hideLoading())\r\n        })\r\n    }\r\n}\r\nexport const delTaskApi =(taskName)=>{\r\n    return dispatch=>{\r\n        dispatch(showLoading())\r\n        return axios({\r\n            url:`http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\r\n            method:\"DELETE\",\r\n        \r\n        })\r\n        .then((res)=>{\r\n        dispatch(getTaskListApi());\r\n        dispatch(hideLoading());\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err.response?.data) \r\n            dispatch(hideLoading())\r\n        })\r\n    }\r\n}\r\nexport const checkTaskApi =(taskName)=>{\r\n    return dispatch=>{\r\n        dispatch(showLoading())\r\n        return axios({\r\n            url:`http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\r\n            method:\"PUT\",\r\n        })\r\n        .then((res)=>{\r\n         dispatch(getTaskListApi());\r\n         dispatch(hideLoading())\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err.response?.data) \r\n            dispatch(hideLoading())\r\n        })\r\n    }\r\n}\r\nexport const recheckTaskApi =(taskName)=>{\r\n    return dispatch=>{\r\n        dispatch(showLoading())\r\n        return axios({\r\n            url:`http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\r\n            method:\"PUT\",\r\n           \r\n        })\r\n        .then((res)=>{\r\n          dispatch(getTaskListApi());\r\n          dispatch(hideLoading())\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err.response?.data) \r\n            dispatch(hideLoading())\r\n        })\r\n    }\r\n}\r\n\r\nexport const showLoading =()=>dispatch=>{\r\n    dispatch({\r\n        type:\"SHOW_LOADING\"\r\n    });\r\n}\r\nexport const hideLoading =()=>dispatch=>{\r\n    dispatch({\r\n        type:\"HIDE_LOADING\"\r\n    });\r\n}","import React,{Component} from \"react\";\r\nimport \"./style.css\";\r\nclass DateTime extends Component {\r\n    constructor() {\r\n       super();\r\n       this.state = {\r\n         curTime : null\r\n       }\r\n     }\r\n     componentDidMount() {\r\n       setInterval( () => {\r\n         this.setState({\r\n           curTime : new Date().toLocaleString()\r\n         })\r\n       },1000)\r\n     }\r\n    render() {\r\n         return(\r\n           <div>\r\n             <p className=\"time\">{this.state.curTime}</p>\r\n           </div>\r\n         );\r\n       }\r\n     }\r\n\r\nexport default DateTime","export default __webpack_public_path__ + \"static/media/Spinner-1s-200px (1).6f75c712.gif\";","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport anhloading from \"../assets/img/Spinner-1s-200px (1).gif\";\r\nimport \"./style.css\";\r\n\r\nexport default function Loading() {\r\n    const {loading}=useSelector(state=>state.ToDoListReducer);\r\n \r\n    if (!loading) return null;\r\n    return (\r\n        <div className=\"container\">\r\n            <img className=\"imgLoading\" src={anhloading} alt=\"loading\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addTaskApi, checkTaskApi, delTaskApi, getTaskListApi, recheckTaskApi } from '../redux/action/ToDoListAction';\r\nimport \"./style.css\";\r\nimport hinh from \"./X2oObC4.png\";\r\nimport DateTime from \"./DateTime\"\r\nimport Loading from './Loading';\r\nexport default function ToDoListRedux(props) {\r\n    const{taskList}=useSelector(state =>state.ToDoListReducer);\r\n    const dispatch = useDispatch();\r\n    const [state, setstate] = useState({\r\n        errors:{\r\n            taskName:''\r\n        },\r\n        values:{\r\n            taskName:''\r\n        },\r\n        isValid:false\r\n    });\r\n  \r\n    const handleChange=(e)=>{\r\n        let isValid=true\r\n        let {name,value}=e.target;\r\n        let newValues={...state.values};\r\n        newValues={...newValues, [name]:value};\r\n        let newErrors={...state.errors};\r\n        let regexString = /^[a-z A-Z]+$/;\r\n        if(!regexString.test(value) || value.trim()=== \"\" ){\r\n            newErrors[name]=name + \" invalid !\";\r\n            isValid=false;\r\n        }else{\r\n            newErrors[name]=\"\";\r\n        }\r\n        setstate({\r\n            ...state,\r\n            values:newValues,\r\n            errors:newErrors,\r\n            isValid:isValid,\r\n\r\n        });\r\n      }\r\n    \r\n    const getTaskList =()=>{\r\n       dispatch(getTaskListApi());\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTaskList()\r\n          \r\n    }, []);\r\n    const getTaskToDo =()=>{\r\n        return taskList.filter(item=>!item.status).map((task,index)=>{\r\n             return (\r\n                     <li key={index}>\r\n                         <span>{task.taskName}</span>\r\n                         <div className=\"buttons\">\r\n                         <button type=\"button\" className=\"remove\" onClick={()=>{\r\n                                  delTask(task.taskName)\r\n                              }}>\r\n                                 <i className=\"fa fa-trash-alt\"/>\r\n                             </button>\r\n                             <button type=\"button\" className=\"complete\"onClick={()=>{\r\n                                  checkTask(task.taskName)\r\n                              }}>\r\n                                 <i className=\"far fa-check-circle\"/>\r\n                                 <i className=\"fas fa-check-circle\"/>\r\n                             </button>\r\n                         </div>\r\n                     </li>\r\n             )\r\n         })\r\n     };\r\n    const getTaskToDoDone =()=>{\r\n         return taskList.filter(item=>item.status).map((task,index)=>{\r\n              return (\r\n                      <li key={index}>\r\n                          <span>{task.taskName}</span>\r\n                          <div className=\"buttons\">\r\n                              <button type=\"button\" className=\"remove\" onClick={()=>{\r\n                                  delTask(task.taskName)\r\n                              }}>\r\n                                  <i className=\"fa fa-trash-alt\"/>\r\n                              </button>\r\n                              <button type=\"button\" className=\"complete\" onClick={()=>{\r\n                                  reCheckTask(task.taskName)\r\n                              }} >\r\n                                  <i className=\"far fa-undo\"/>\r\n                                  <i className=\"fas fa-undo\"/>\r\n                              </button>\r\n                          </div>\r\n                      </li>\r\n              )\r\n          })\r\n    };\r\n    const reCheckTask =(taskName)=>{\r\n      dispatch(recheckTaskApi(taskName))\r\n    };\r\n\r\n    const checkTask =(taskName)=>{\r\n      dispatch(checkTaskApi(taskName));\r\n    };\r\n\r\n    const delTask =(taskName)=>{\r\n      dispatch(delTaskApi(taskName))\r\n    };\r\n  \r\n    const addTask=(e)=>{\r\n        e.preventDefault();\r\n        console.log(state.values.taskName);\r\n        console.log(state.isValid)\r\n        if(state.isValid){\r\n            dispatch(addTaskApi(state.values.taskName));\r\n            state.values.taskName=\"\";\r\n        };\r\n      \r\n     };\r\n    return (\r\n          <form onSubmit={addTask} className=\"card\">\r\n                <div className=\"card__header\">\r\n                    <img src={hinh} alt=\"anhBia\" />\r\n                </div>\r\n                {/* <h2>hello!</h2> */}\r\n                <div className=\"card__body\">\r\n                    <div className=\"card__content\">\r\n                        <div className=\"card__title\">\r\n                            <h2>My Tasks</h2>\r\n                            <p><DateTime/></p>\r\n                        </div>\r\n                        <div className=\"card__add\">\r\n                            <input name=\"taskName\" onChange={handleChange} value={state.values.taskName} id=\"newTask\"  type=\"text\" placeholder=\"Enter an activity...\" />\r\n                            <button type=\"submit\" id=\"addItem\" onClick={addTask}><i className=\"fa fa-plus\" /></button>\r\n                        </div>\r\n                     \r\n                        <div className=\"error\"> {state.errors.taskName}</div>\r\n                        <div id=\"notiInput\" className=\"alert-danger\" style={{display: 'none'}}/>\r\n                        <div className=\"card__todo\">\r\n                            <ul className=\"todo\" id=\"todo\">{getTaskToDo()}</ul>\r\n                            <ul className=\"todo\" id=\"completed\"> {getTaskToDoDone()}</ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Loading/>\r\n            </form>\r\n            \r\n    )\r\n}\r\n\r\n","import './App.css';\nimport ToDoList from './ToDoList/ToDoList';\nimport ToDoListRedux from './ToDoList/ToDoListRedux';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        {/* <ToDoList/> */}\n        <ToDoListRedux/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { GET_TASK_API } from \"../constants/ToDoListConstants\";\r\n\r\nconst initialState = {\r\n    taskList:[],\r\n    loading:false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n    case GET_TASK_API:\r\n        state.taskList=action.taskList\r\n    \r\n        return { ...state}\r\n    case \"SHOW_LOADING\":\r\n        return { ...state, loading:true};\r\n    case \"HIDE_LOADING\":\r\n            return { ...state, loading:false};\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import {applyMiddleware, combineReducers,createStore} from \"redux\";\r\nimport ToDoListReducer from \"./reducer/ToDoListReducer\";\r\nimport reduxThunk from \"redux-thunk\"\r\nconst rootReducer=combineReducers({\r\n    ToDoListReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(reduxThunk));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/configStore\";\nimport {Provider} from \"react-redux\";\nReactDOM.render(\n  <Provider store ={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}